// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SubscriberApp.Data;

#nullable disable

namespace SubscriberApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240907184747_Models")]
    partial class Models
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SubscriberApp.Models.Companies", b =>
                {
                    b.Property<int>("company_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("company_id"));

                    b.Property<string>("company_name")
                        .HasColumnType("text");

                    b.Property<string>("manager_email")
                        .HasColumnType("text");

                    b.Property<int>("manager_id")
                        .HasColumnType("integer");

                    b.Property<string>("manager_name")
                        .HasColumnType("text");

                    b.HasKey("company_id");

                    b.ToTable("companies");
                });

            modelBuilder.Entity("SubscriberApp.Models.Messages", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("is_read")
                        .HasColumnType("boolean");

                    b.Property<string>("message")
                        .HasColumnType("text");

                    b.Property<int>("receiver_id")
                        .HasColumnType("integer");

                    b.Property<int>("sender_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("sent_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("SubscriberApp.Models.Subscribers", b =>
                {
                    b.Property<int>("subscriber_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("subscriber_id"));

                    b.Property<string>("company_name")
                        .HasColumnType("text");

                    b.Property<string>("subscriber_name")
                        .HasColumnType("text");

                    b.HasKey("subscriber_id");

                    b.ToTable("subscribers");
                });

            modelBuilder.Entity("SubscriberApp.Models.Users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<int>("company_id")
                        .HasColumnType("integer");

                    b.Property<string>("company_name")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("user_name")
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
